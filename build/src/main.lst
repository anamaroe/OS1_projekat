GAS LISTING /tmp/ccNPhlBN.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	main
   9              	main:
  10              	.LFB28:
  11              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../h/Riscv.hpp"
   2:src/main.cpp  **** #include "../h/PCB.hpp"
   3:src/main.cpp  **** 
   4:src/main.cpp  **** // Korisnicka aplikacija:
   5:src/main.cpp  **** void userMain();
   6:src/main.cpp  **** 
   7:src/main.cpp  **** // Kernel nit
   8:src/main.cpp  **** void main() {
  12              		.loc 1 8 13
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
   9:src/main.cpp  **** 
  10:src/main.cpp  ****     Riscv::w_stvec((uint64)&(Riscv::supervisorTrap) | 1);
  22              		.loc 1 10 5
  23              		.loc 1 10 19 is_stmt 0
  24 0010 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  24      83B70700 
  25 0018 93E71700 		ori	a5,a5,1
  26              	.LVL0:
  27              	.LBB6:
  28              	.LBB7:
  29              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   2:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   3:src/../h/Riscv.hpp **** 
   4:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   5:src/../h/Riscv.hpp **** 
   6:src/../h/Riscv.hpp **** class Riscv {
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** public:
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp ****     // pop ssattus ssp and sstatus spie bits (ne inline!)
  11:src/../h/Riscv.hpp ****     static void popSppSpie();
  12:src/../h/Riscv.hpp **** 
  13:src/../h/Riscv.hpp ****     // read scause
  14:src/../h/Riscv.hpp ****     static uint64 r_scause();
  15:src/../h/Riscv.hpp **** 
  16:src/../h/Riscv.hpp ****     // write scause
  17:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  18:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccNPhlBN.s 			page 2


  19:src/../h/Riscv.hpp ****     // read sepc
  20:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  21:src/../h/Riscv.hpp **** 
  22:src/../h/Riscv.hpp ****     // write sepc
  23:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  24:src/../h/Riscv.hpp **** 
  25:src/../h/Riscv.hpp ****     // read stvec
  26:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  27:src/../h/Riscv.hpp **** 
  28:src/../h/Riscv.hpp ****     // write stvec
  29:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  30:src/../h/Riscv.hpp **** 
  31:src/../h/Riscv.hpp ****     // read stval
  32:src/../h/Riscv.hpp ****     static uint64 r_stval();
  33:src/../h/Riscv.hpp **** 
  34:src/../h/Riscv.hpp ****     // write stval
  35:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  36:src/../h/Riscv.hpp **** 
  37:src/../h/Riscv.hpp ****     enum BitMaskSip {
  38:src/../h/Riscv.hpp ****         SIP_SSIP  = (1 << 1),
  39:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  40:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9)
  41:src/../h/Riscv.hpp ****     };
  42:src/../h/Riscv.hpp **** 
  43:src/../h/Riscv.hpp ****     // mask set register sip
  44:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  45:src/../h/Riscv.hpp **** 
  46:src/../h/Riscv.hpp ****     // mask clear register sip
  47:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     // read register sip
  50:src/../h/Riscv.hpp ****     static uint64 r_sip();
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     //write register sip
  53:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     enum BitMaskSstatus {
  56:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  57:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  58:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8)
  59:src/../h/Riscv.hpp ****     };
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     // mask set register sstatus
  62:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  63:src/../h/Riscv.hpp **** 
  64:src/../h/Riscv.hpp ****     // mask clear register sstatus
  65:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  66:src/../h/Riscv.hpp **** 
  67:src/../h/Riscv.hpp ****     // read register sstatus
  68:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  69:src/../h/Riscv.hpp **** 
  70:src/../h/Riscv.hpp ****     // write register sstatus
  71:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp ****     // defined in assembly code
  74:src/../h/Riscv.hpp ****     static void supervisorTrap();
  75:src/../h/Riscv.hpp ****     static void ecallTrap();
GAS LISTING /tmp/ccNPhlBN.s 			page 3


  76:src/../h/Riscv.hpp ****     static void timerTrap();
  77:src/../h/Riscv.hpp ****     static void consoleTrap();
  78:src/../h/Riscv.hpp **** 
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     enum ABI_CODES {
  81:src/../h/Riscv.hpp ****         MEMALLOC = 0x01, MEMFREE = 0x02,
  82:src/../h/Riscv.hpp ****         THREADCREATE = 0x11, THREADEXIT = 0x12, THREADDISPATCH = 0x13, THREADJOIN = 0x14, THREADSTA
  83:src/../h/Riscv.hpp ****         SEMOPEN = 0x21, SEMCLOSE = 0x22, SEMWAIT = 0x23, SEMSIGNAL = 0x24,
  84:src/../h/Riscv.hpp ****         TIMESLEEP = 0x31,
  85:src/../h/Riscv.hpp ****         GETC = 0x41, PUTC = 0x42,
  86:src/../h/Riscv.hpp ****         USER_MODE = 0x51, SUPER_MODE = 0x52
  87:src/../h/Riscv.hpp ****     };
  88:src/../h/Riscv.hpp **** 
  89:src/../h/Riscv.hpp **** private:
  90:src/../h/Riscv.hpp **** 
  91:src/../h/Riscv.hpp ****     // ecalls and interrupts
  92:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  93:src/../h/Riscv.hpp ****     static void timerHandler();
  94:src/../h/Riscv.hpp ****     static void consoleHandler();
  95:src/../h/Riscv.hpp **** 
  96:src/../h/Riscv.hpp **** };
  97:src/../h/Riscv.hpp **** 
  98:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause(){
  99:src/../h/Riscv.hpp ****     uint64 volatile scause;
 100:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 101:src/../h/Riscv.hpp ****     return scause;
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause){
 105:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]"::[scause]"r"(scause));
 106:src/../h/Riscv.hpp **** }
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc(){
 109:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 110:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %[sepc], sepc":[sepc] "=r"(sepc));
 111:src/../h/Riscv.hpp ****     return sepc;
 112:src/../h/Riscv.hpp **** }
 113:src/../h/Riscv.hpp **** 
 114:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc){
 115:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc , %[sepc]"::[sepc]"r"(sepc));
 116:src/../h/Riscv.hpp **** }
 117:src/../h/Riscv.hpp **** 
 118:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec(){
 119:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 120:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec":[stvec]"=r"(stvec));
 121:src/../h/Riscv.hpp ****     return stvec;
 122:src/../h/Riscv.hpp **** }
 123:src/../h/Riscv.hpp **** 
 124:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec){
 125:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]"::[stvec]"r"(stvec));
  30              		.loc 2 125 5 is_stmt 1
  31              		.loc 2 125 65 is_stmt 0
  32              	#APP
  33              	# 125 "src/../h/Riscv.hpp" 1
 126              	}
  34              		csrw stvec, a5
  35              	# 0 "" 2
GAS LISTING /tmp/ccNPhlBN.s 			page 4


  36              	.LVL1:
  37              	#NO_APP
  38              	.LBE7:
  39              	.LBE6:
  11:src/main.cpp  ****     PCB* first = (PCB*)PCB::creatorThreadPCB(0, 0, 0);
  40              		.loc 1 11 5 is_stmt 1
  41              		.loc 1 11 45 is_stmt 0
  42 0020 13060000 		li	a2,0
  43 0024 93050000 		li	a1,0
  44 0028 13050000 		li	a0,0
  45 002c 97000000 		call	_ZN3PCB16creatorThreadPCBEmmm@plt
  45      E7800000 
  46              	.LVL2:
  12:src/main.cpp  ****     PCB::running = first;
  47              		.loc 1 12 5 is_stmt 1
  48              		.loc 1 12 18 is_stmt 0
  49 0034 97070000 		la	a5,_ZN3PCB7runningE
  49      83B70700 
  50 003c 23B0A700 		sd	a0,0(a5)
  13:src/main.cpp  **** 
  14:src/main.cpp  ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
  51              		.loc 1 14 5 is_stmt 1
  52              	.LVL3:
  53              	.LBB8:
  54              	.LBB9:
 127:src/../h/Riscv.hpp **** 
 128:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval(){
 129:src/../h/Riscv.hpp ****     uint64 volatile stval;
 130:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval":[stval]"=r"(stval));
 131:src/../h/Riscv.hpp ****     return stval;
 132:src/../h/Riscv.hpp **** }
 133:src/../h/Riscv.hpp **** 
 134:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval){
 135:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]"::[stval]"r"(stval));
 136:src/../h/Riscv.hpp **** }
 137:src/../h/Riscv.hpp **** 
 138:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 139:src/../h/Riscv.hpp **** {
 140:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 141:src/../h/Riscv.hpp **** }
 142:src/../h/Riscv.hpp **** 
 143:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 144:src/../h/Riscv.hpp **** {
 145:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 146:src/../h/Riscv.hpp **** }
 147:src/../h/Riscv.hpp **** 
 148:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip()
 149:src/../h/Riscv.hpp **** {
 150:src/../h/Riscv.hpp ****     uint64 volatile sip;
 151:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 152:src/../h/Riscv.hpp ****     return sip;
 153:src/../h/Riscv.hpp **** }
 154:src/../h/Riscv.hpp **** 
 155:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 156:src/../h/Riscv.hpp **** {
 157:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 158:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccNPhlBN.s 			page 5


 159:src/../h/Riscv.hpp **** 
 160:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 161:src/../h/Riscv.hpp **** {
 162:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
  55              		.loc 2 162 5
  56              		.loc 2 162 68 is_stmt 0
  57 0040 93072000 		li	a5,2
  58              	#APP
  59              	# 162 "src/../h/Riscv.hpp" 1
 163              	}
  60              		csrs sstatus, a5
  61              	# 0 "" 2
  62              	.LVL4:
  63              	#NO_APP
  64              	.LBE9:
  65              	.LBE8:
  15:src/main.cpp  **** 
  16:src/main.cpp  ****     uint64 op_code_1 = Riscv::USER_MODE;
  66              		.loc 1 16 5 is_stmt 1
  17:src/main.cpp  ****     __asm__ volatile ("mv a0, %[par]" : : [par]"r"(op_code_1));
  67              		.loc 1 17 5
  68              		.loc 1 17 63 is_stmt 0
  69 0048 93071005 		li	a5,81
  70              	#APP
  71              	# 17 "src/main.cpp" 1
  18              	    __asm__ volatile ("ecall");
  72              		mv a0, a5
  73              	# 0 "" 2
  74              		.loc 1 18 5 is_stmt 1
  75              		.loc 1 18 31 is_stmt 0
  76              	# 18 "src/main.cpp" 1
  19              	
  20:src/main.cpp  ****     userMain();
  77              		ecall
  78              	# 0 "" 2
  79              		.loc 1 20 5 is_stmt 1
  80              		.loc 1 20 13 is_stmt 0
  81              	#NO_APP
  82 0054 97000000 		call	_Z8userMainv@plt
  82      E7800000 
  83              	.LVL5:
  21:src/main.cpp  **** 
  22:src/main.cpp  ****     uint64 op_code_2 = Riscv::SUPER_MODE;
  84              		.loc 1 22 5 is_stmt 1
  23:src/main.cpp  ****     __asm__ volatile ("mv a0, %[par]" : : [par]"r"(op_code_2));
  85              		.loc 1 23 5
  86              		.loc 1 23 63 is_stmt 0
  87 005c 93072005 		li	a5,82
  88              	#APP
  89              	# 23 "src/main.cpp" 1
  24              	    __asm__ volatile ("ecall");
  90              		mv a0, a5
  91              	# 0 "" 2
  92              		.loc 1 24 5 is_stmt 1
  93              		.loc 1 24 31 is_stmt 0
  94              	# 24 "src/main.cpp" 1
  25              	
GAS LISTING /tmp/ccNPhlBN.s 			page 6


  26:src/main.cpp  **** }...
  95              		ecall
  96              	# 0 "" 2
  97              		.loc 1 26 1
  98              	#NO_APP
  99 0068 83308100 		ld	ra,8(sp)
 100              		.cfi_restore 1
 101 006c 03340100 		ld	s0,0(sp)
 102              		.cfi_restore 8
 103              		.cfi_def_cfa 2, 16
 104 0070 13010101 		addi	sp,sp,16
 105              		.cfi_def_cfa_offset 0
 106 0074 67800000 		jr	ra
 107              		.cfi_endproc
 108              	.LFE28:
 110              	.Letext0:
 111              		.file 3 "src/../h/../lib/hw.h"
 112              		.file 4 "src/../h/PCB.hpp"
GAS LISTING /tmp/ccNPhlBN.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccNPhlBN.s:9      .text:0000000000000000 main
     /tmp/ccNPhlBN.s:13     .text:0000000000000000 .L0 
     /tmp/ccNPhlBN.s:14     .text:0000000000000000 .L0 
     /tmp/ccNPhlBN.s:15     .text:0000000000000004 .L0 
     /tmp/ccNPhlBN.s:18     .text:000000000000000c .L0 
     /tmp/ccNPhlBN.s:19     .text:000000000000000c .L0 
     /tmp/ccNPhlBN.s:21     .text:0000000000000010 .L0 
     /tmp/ccNPhlBN.s:23     .text:0000000000000010 .L0 
     /tmp/ccNPhlBN.s:24     .text:0000000000000010 .L0 
     /tmp/ccNPhlBN.s:31     .text:000000000000001c .L0 
  src/../h/Riscv.hpp:125    .text:000000000000001c .L0 
     /tmp/ccNPhlBN.s:41     .text:0000000000000020 .L0 
     /tmp/ccNPhlBN.s:42     .text:0000000000000020 .L0 
     /tmp/ccNPhlBN.s:48     .text:0000000000000034 .L0 
     /tmp/ccNPhlBN.s:49     .text:0000000000000034 .L0 
     /tmp/ccNPhlBN.s:55     .text:0000000000000040 .L0 
     /tmp/ccNPhlBN.s:56     .text:0000000000000040 .L0 
     /tmp/ccNPhlBN.s:57     .text:0000000000000040 .L0 
     /tmp/ccNPhlBN.s:67     .text:0000000000000048 .L0 
     /tmp/ccNPhlBN.s:68     .text:0000000000000048 .L0 
     /tmp/ccNPhlBN.s:69     .text:0000000000000048 .L0 
     /tmp/ccNPhlBN.s:75     .text:0000000000000050 .L0 
        src/main.cpp:18     .text:0000000000000050 .L0 
     /tmp/ccNPhlBN.s:80     .text:0000000000000054 .L0 
     /tmp/ccNPhlBN.s:82     .text:0000000000000054 .L0 
     /tmp/ccNPhlBN.s:85     .text:000000000000005c .L0 
     /tmp/ccNPhlBN.s:86     .text:000000000000005c .L0 
     /tmp/ccNPhlBN.s:87     .text:000000000000005c .L0 
     /tmp/ccNPhlBN.s:93     .text:0000000000000064 .L0 
        src/main.cpp:24     .text:0000000000000064 .L0 
     /tmp/ccNPhlBN.s:99     .text:0000000000000068 .L0 
     /tmp/ccNPhlBN.s:100    .text:000000000000006c .L0 
     /tmp/ccNPhlBN.s:102    .text:0000000000000070 .L0 
     /tmp/ccNPhlBN.s:103    .text:0000000000000070 .L0 
     /tmp/ccNPhlBN.s:105    .text:0000000000000074 .L0 
     /tmp/ccNPhlBN.s:107    .text:0000000000000078 .L0 
     /tmp/ccNPhlBN.s:113    .text:0000000000000078 .L0 
     /tmp/ccNPhlBN.s:24     .text:0000000000000010 .L0 
     /tmp/ccNPhlBN.s:49     .text:0000000000000034 .L0 
     /tmp/ccNPhlBN.s:984    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccNPhlBN.s:1990   .debug_str:000000000000069f .LASF135
     /tmp/ccNPhlBN.s:1884   .debug_str:00000000000003bd .LASF136
     /tmp/ccNPhlBN.s:1762   .debug_str:000000000000004e .LASF137
     /tmp/ccNPhlBN.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccNPhlBN.s:110    .text:0000000000000078 .Letext0
     /tmp/ccNPhlBN.s:1750   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccNPhlBN.s:1914   .debug_str:00000000000004a3 .LASF0
     /tmp/ccNPhlBN.s:1928   .debug_str:00000000000004e6 .LASF1
     /tmp/ccNPhlBN.s:1896   .debug_str:0000000000000419 .LASF2
     /tmp/ccNPhlBN.s:1866   .debug_str:000000000000035e .LASF4
     /tmp/ccNPhlBN.s:1972   .debug_str:0000000000000619 .LASF3
     /tmp/ccNPhlBN.s:1778   .debug_str:00000000000000c9 .LASF5
     /tmp/ccNPhlBN.s:1930   .debug_str:00000000000004f9 .LASF6
     /tmp/ccNPhlBN.s:1912   .debug_str:0000000000000490 .LASF7
     /tmp/ccNPhlBN.s:2000   .debug_str:00000000000007a3 .LASF8
GAS LISTING /tmp/ccNPhlBN.s 			page 8


     /tmp/ccNPhlBN.s:1852   .debug_str:00000000000002e9 .LASF9
     /tmp/ccNPhlBN.s:1948   .debug_str:0000000000000578 .LASF10
     /tmp/ccNPhlBN.s:1992   .debug_str:0000000000000763 .LASF11
     /tmp/ccNPhlBN.s:1784   .debug_str:00000000000000e7 .LASF12
     /tmp/ccNPhlBN.s:1758   .debug_str:0000000000000035 .LASF13
     /tmp/ccNPhlBN.s:1796   .debug_str:0000000000000148 .LASF14
     /tmp/ccNPhlBN.s:1964   .debug_str:00000000000005d5 .LASF15
     /tmp/ccNPhlBN.s:1812   .debug_str:00000000000001c5 .LASF16
     /tmp/ccNPhlBN.s:1926   .debug_str:00000000000004e0 .LASF87
     /tmp/ccNPhlBN.s:1816   .debug_str:00000000000001ef .LASF20
     /tmp/ccNPhlBN.s:1808   .debug_str:00000000000001a3 .LASF17
     /tmp/ccNPhlBN.s:1886   .debug_str:00000000000003ca .LASF18
     /tmp/ccNPhlBN.s:1780   .debug_str:00000000000000d0 .LASF19
     /tmp/ccNPhlBN.s:2020   .debug_str:0000000000000846 .LASF21
     /tmp/ccNPhlBN.s:1960   .debug_str:00000000000005c1 .LASF22
     /tmp/ccNPhlBN.s:1800   .debug_str:000000000000017c .LASF23
     /tmp/ccNPhlBN.s:1956   .debug_str:00000000000005af .LASF24
     /tmp/ccNPhlBN.s:1944   .debug_str:0000000000000563 .LASF25
     /tmp/ccNPhlBN.s:1910   .debug_str:0000000000000481 .LASF26
     /tmp/ccNPhlBN.s:2008   .debug_str:00000000000007ec .LASF27
     /tmp/ccNPhlBN.s:2040   .debug_str:00000000000008db .LASF28
     /tmp/ccNPhlBN.s:1770   .debug_str:00000000000000a5 .LASF29
     /tmp/ccNPhlBN.s:1908   .debug_str:0000000000000479 .LASF30
     /tmp/ccNPhlBN.s:1776   .debug_str:00000000000000c0 .LASF31
     /tmp/ccNPhlBN.s:1882   .debug_str:00000000000003b5 .LASF32
     /tmp/ccNPhlBN.s:1938   .debug_str:000000000000053b .LASF33
     /tmp/ccNPhlBN.s:1924   .debug_str:00000000000004d6 .LASF34
     /tmp/ccNPhlBN.s:1978   .debug_str:0000000000000641 .LASF35
     /tmp/ccNPhlBN.s:1826   .debug_str:000000000000024e .LASF36
     /tmp/ccNPhlBN.s:1786   .debug_str:00000000000000f7 .LASF37
     /tmp/ccNPhlBN.s:1916   .debug_str:00000000000004b0 .LASF38
     /tmp/ccNPhlBN.s:1962   .debug_str:00000000000005ca .LASF71
     /tmp/ccNPhlBN.s:2024   .debug_str:0000000000000867 .LASF73
     /tmp/ccNPhlBN.s:1760   .debug_str:0000000000000045 .LASF39
     /tmp/ccNPhlBN.s:1980   .debug_str:0000000000000646 .LASF41
     /tmp/ccNPhlBN.s:1806   .debug_str:000000000000019a .LASF43
     /tmp/ccNPhlBN.s:1824   .debug_str:0000000000000239 .LASF45
     /tmp/ccNPhlBN.s:1974   .debug_str:000000000000062b .LASF40
     /tmp/ccNPhlBN.s:1952   .debug_str:0000000000000597 .LASF42
     /tmp/ccNPhlBN.s:1988   .debug_str:0000000000000698 .LASF44
     /tmp/ccNPhlBN.s:1984   .debug_str:0000000000000673 .LASF46
     /tmp/ccNPhlBN.s:1846   .debug_str:00000000000002c1 .LASF47
     /tmp/ccNPhlBN.s:1814   .debug_str:00000000000001db .LASF48
     /tmp/ccNPhlBN.s:1754   .debug_str:000000000000001c .LASF49
     /tmp/ccNPhlBN.s:1858   .debug_str:0000000000000316 .LASF50
     /tmp/ccNPhlBN.s:1834   .debug_str:000000000000026b .LASF51
     /tmp/ccNPhlBN.s:1788   .debug_str:0000000000000101 .LASF52
     /tmp/ccNPhlBN.s:2036   .debug_str:00000000000008ce .LASF53
     /tmp/ccNPhlBN.s:1836   .debug_str:0000000000000273 .LASF54
     /tmp/ccNPhlBN.s:1880   .debug_str:00000000000003ae .LASF55
     /tmp/ccNPhlBN.s:2018   .debug_str:0000000000000833 .LASF56
     /tmp/ccNPhlBN.s:1774   .debug_str:00000000000000b9 .LASF57
     /tmp/ccNPhlBN.s:1844   .debug_str:00000000000002ae .LASF58
     /tmp/ccNPhlBN.s:1848   .debug_str:00000000000002c9 .LASF59
     /tmp/ccNPhlBN.s:1986   .debug_str:0000000000000686 .LASF60
     /tmp/ccNPhlBN.s:1772   .debug_str:00000000000000b3 .LASF61
     /tmp/ccNPhlBN.s:2042   .debug_str:00000000000008e7 .LASF62
GAS LISTING /tmp/ccNPhlBN.s 			page 9


     /tmp/ccNPhlBN.s:2034   .debug_str:00000000000008c3 .LASF63
     /tmp/ccNPhlBN.s:1970   .debug_str:0000000000000601 .LASF64
     /tmp/ccNPhlBN.s:1874   .debug_str:000000000000038e .LASF65
     /tmp/ccNPhlBN.s:1982   .debug_str:000000000000065b .LASF66
     /tmp/ccNPhlBN.s:1794   .debug_str:000000000000013e .LASF67
     /tmp/ccNPhlBN.s:1864   .debug_str:0000000000000348 .LASF68
     /tmp/ccNPhlBN.s:1904   .debug_str:0000000000000459 .LASF69
     /tmp/ccNPhlBN.s:1856   .debug_str:0000000000000300 .LASF70
     /tmp/ccNPhlBN.s:1976   .debug_str:0000000000000632 .LASF72
     /tmp/ccNPhlBN.s:1790   .debug_str:0000000000000115 .LASF74
     /tmp/ccNPhlBN.s:1890   .debug_str:00000000000003f5 .LASF75
     /tmp/ccNPhlBN.s:2002   .debug_str:00000000000007b3 .LASF76
     /tmp/ccNPhlBN.s:1818   .debug_str:00000000000001fe .LASF77
     /tmp/ccNPhlBN.s:1810   .debug_str:00000000000001af .LASF78
     /tmp/ccNPhlBN.s:1892   .debug_str:00000000000003ff .LASF79
     /tmp/ccNPhlBN.s:2030   .debug_str:00000000000008a2 .LASF80
     /tmp/ccNPhlBN.s:2004   .debug_str:00000000000007c9 .LASF81
     /tmp/ccNPhlBN.s:1820   .debug_str:0000000000000208 .LASF83
     /tmp/ccNPhlBN.s:1902   .debug_str:000000000000044c .LASF82
     /tmp/ccNPhlBN.s:1994   .debug_str:0000000000000772 .LASF84
     /tmp/ccNPhlBN.s:2014   .debug_str:0000000000000818 .LASF85
     /tmp/ccNPhlBN.s:1752   .debug_str:0000000000000000 .LASF86
     /tmp/ccNPhlBN.s:1766   .debug_str:0000000000000086 .LASF138
     /tmp/ccNPhlBN.s:2012   .debug_str:000000000000080b .LASF88
     /tmp/ccNPhlBN.s:1932   .debug_str:000000000000050c .LASF90
     /tmp/ccNPhlBN.s:1968   .debug_str:00000000000005f1 .LASF89
     /tmp/ccNPhlBN.s:1802   .debug_str:0000000000000184 .LASF91
     /tmp/ccNPhlBN.s:1950   .debug_str:0000000000000587 .LASF92
     /tmp/ccNPhlBN.s:1792   .debug_str:0000000000000131 .LASF93
     /tmp/ccNPhlBN.s:1868   .debug_str:0000000000000365 .LASF94
     /tmp/ccNPhlBN.s:1872   .debug_str:0000000000000381 .LASF95
     /tmp/ccNPhlBN.s:1958   .debug_str:00000000000005bc .LASF96
     /tmp/ccNPhlBN.s:2016   .debug_str:0000000000000827 .LASF97
     /tmp/ccNPhlBN.s:1828   .debug_str:0000000000000253 .LASF139
     /tmp/ccNPhlBN.s:2022   .debug_str:0000000000000850 .LASF140
     /tmp/ccNPhlBN.s:1898   .debug_str:0000000000000427 .LASF98
     /tmp/ccNPhlBN.s:1768   .debug_str:000000000000008e .LASF99
     /tmp/ccNPhlBN.s:1966   .debug_str:00000000000005eb .LASF100
     /tmp/ccNPhlBN.s:1918   .debug_str:00000000000004bb .LASF101
     /tmp/ccNPhlBN.s:1832   .debug_str:0000000000000263 .LASF141
     /tmp/ccNPhlBN.s:1906   .debug_str:0000000000000463 .LASF142
     /tmp/ccNPhlBN.s:1954   .debug_str:00000000000005aa .LASF143
     /tmp/ccNPhlBN.s:1830   .debug_str:000000000000025e .LASF102
     /tmp/ccNPhlBN.s:1920   .debug_str:00000000000004cb .LASF103
     /tmp/ccNPhlBN.s:1876   .debug_str:0000000000000399 .LASF104
     /tmp/ccNPhlBN.s:1870   .debug_str:0000000000000378 .LASF105
     /tmp/ccNPhlBN.s:1922   .debug_str:00000000000004d1 .LASF106
     /tmp/ccNPhlBN.s:1764   .debug_str:000000000000007c .LASF107
     /tmp/ccNPhlBN.s:1894   .debug_str:000000000000040b .LASF108
     /tmp/ccNPhlBN.s:1942   .debug_str:000000000000054a .LASF109
     /tmp/ccNPhlBN.s:2006   .debug_str:00000000000007de .LASF112
     /tmp/ccNPhlBN.s:1798   .debug_str:0000000000000154 .LASF114
     /tmp/ccNPhlBN.s:1854   .debug_str:00000000000002f7 .LASF110
     /tmp/ccNPhlBN.s:1862   .debug_str:0000000000000335 .LASF111
     /tmp/ccNPhlBN.s:2032   .debug_str:00000000000008bb .LASF113
     /tmp/ccNPhlBN.s:2010   .debug_str:00000000000007f7 .LASF115
     /tmp/ccNPhlBN.s:1782   .debug_str:00000000000000dc .LASF116
GAS LISTING /tmp/ccNPhlBN.s 			page 10


     /tmp/ccNPhlBN.s:1860   .debug_str:000000000000032a .LASF117
     /tmp/ccNPhlBN.s:1842   .debug_str:000000000000029e .LASF118
     /tmp/ccNPhlBN.s:2028   .debug_str:0000000000000885 .LASF119
     /tmp/ccNPhlBN.s:1756   .debug_str:0000000000000024 .LASF120
     /tmp/ccNPhlBN.s:1888   .debug_str:00000000000003d7 .LASF121
     /tmp/ccNPhlBN.s:1822   .debug_str:000000000000022a .LASF122
     /tmp/ccNPhlBN.s:1850   .debug_str:00000000000002cf .LASF123
     /tmp/ccNPhlBN.s:1996   .debug_str:000000000000078c .LASF124
     /tmp/ccNPhlBN.s:1900   .debug_str:0000000000000433 .LASF125
     /tmp/ccNPhlBN.s:1840   .debug_str:000000000000028c .LASF126
     /tmp/ccNPhlBN.s:1934   .debug_str:0000000000000518 .LASF127
     /tmp/ccNPhlBN.s:1838   .debug_str:0000000000000287 .LASF128
     /tmp/ccNPhlBN.s:1940   .debug_str:0000000000000545 .LASF129
     /tmp/ccNPhlBN.s:10     .text:0000000000000000 .LFB28
     /tmp/ccNPhlBN.s:108    .text:0000000000000078 .LFE28
     /tmp/ccNPhlBN.s:2026   .debug_str:000000000000087f .LASF130
     /tmp/ccNPhlBN.s:1715   .debug_loc:0000000000000000 .LLST0
     /tmp/ccNPhlBN.s:1946   .debug_str:000000000000056e .LASF131
     /tmp/ccNPhlBN.s:1804   .debug_str:0000000000000190 .LASF132
     /tmp/ccNPhlBN.s:27     .text:000000000000001c .LBB6
     /tmp/ccNPhlBN.s:39     .text:0000000000000020 .LBE6
     /tmp/ccNPhlBN.s:1722   .debug_loc:0000000000000023 .LLST1
     /tmp/ccNPhlBN.s:53     .text:0000000000000040 .LBB8
     /tmp/ccNPhlBN.s:65     .text:0000000000000048 .LBE8
     /tmp/ccNPhlBN.s:1729   .debug_loc:0000000000000046 .LLST2
     /tmp/ccNPhlBN.s:46     .text:0000000000000034 .LVL2
     /tmp/ccNPhlBN.s:83     .text:000000000000005c .LVL5
     /tmp/ccNPhlBN.s:2038   .debug_str:00000000000008d6 .LASF133
     /tmp/ccNPhlBN.s:1936   .debug_str:0000000000000535 .LASF134
     /tmp/ccNPhlBN.s:1878   .debug_str:00000000000003a1 .LASF144
     /tmp/ccNPhlBN.s:1998   .debug_str:000000000000079a .LASF145
     /tmp/ccNPhlBN.s:26     .text:000000000000001c .LVL0
     /tmp/ccNPhlBN.s:36     .text:0000000000000020 .LVL1
     /tmp/ccNPhlBN.s:52     .text:0000000000000040 .LVL3
     /tmp/ccNPhlBN.s:62     .text:0000000000000048 .LVL4
     /tmp/ccNPhlBN.s:114    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN5Riscv14supervisorTrapEv
_ZN3PCB16creatorThreadPCBEmmm
_ZN3PCB7runningE
_Z8userMainv
